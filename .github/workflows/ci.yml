name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dslx_ci:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Rust and Cargo
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install xlsynth-driver using Cargo
      run: |
        cargo install xlsynth-driver

    - name: Download and rename libxls
      run: |
        RELEASE_URL=$(curl -s https://api.github.com/repos/xlsynth/xlsynth/releases/latest \
          | grep "browser_download_url.*libxls-ubuntu2004.so" \
          | cut -d '"' -f 4)
        VERSION=$(curl -s https://api.github.com/repos/xlsynth/xlsynth/releases/latest \
          | grep "tag_name" \
          | cut -d '"' -f 4)
        echo "version: ${VERSION}"
        curl -L -o libxls-ubuntu2004.so "$RELEASE_URL"
        mv libxls-ubuntu2004.so "libxls-$VERSION-ubuntu2004.so"
        ls *.so
        file *.so
        export LD_LIBRARY_PATH=$(pwd):$LD_LIBRARY_PATH
        sudo ln -s ${PWD}/"libxls-$VERSION-ubuntu2004.so" /usr/lib/

    - name: Note xlsynth-driver version
      run: |
        #ldd $(which xlsynth-driver)
        #LD_DEBUG=libs xlsynth-driver version
        xlsynth-driver version

    - name: Set up Bazelisk
      run: |
        sudo apt-get update
        sudo apt-get install -y curl gnupg
        sudo curl -L https://github.com/bazelbuild/bazelisk/releases/download/v1.23.0/bazelisk-linux-amd64 -o /usr/local/bin/bazel
        sudo chmod +x /usr/local/bin/bazel
        bazel version

    - name: Download latest xlsynth release - dslx_interpreter_main
      run: |
        RELEASE_URL=$(curl -s https://api.github.com/repos/xlsynth/xlsynth/releases/latest \
          | grep "browser_download_url.*dslx_interpreter_main-ubuntu2204" \
          | cut -d '"' -f 4)
        curl -L -o dslx_interpreter_main "$RELEASE_URL"
        chmod +x dslx_interpreter_main
        mkdir -p dependencies
        mv dslx_interpreter_main dependencies/

    - name: Download latest xlsynth release - ir_converter_main
      run: |
        RELEASE_URL=$(curl -s https://api.github.com/repos/xlsynth/xlsynth/releases/latest \
          | grep "browser_download_url.*ir_converter_main-ubuntu2204" \
          | cut -d '"' -f 4)
        curl -L -o ir_converter_main "$RELEASE_URL"
        chmod +x ir_converter_main
        mkdir -p dependencies
        mv ir_converter_main dependencies/

    - name: Download latest xlsynth release - opt_main
      run: |
        RELEASE_URL=$(curl -s https://api.github.com/repos/xlsynth/xlsynth/releases/latest \
          | grep "browser_download_url.*opt_main-ubuntu2204" \
          | cut -d '"' -f 4)
        curl -L -o opt_main "$RELEASE_URL"
        chmod +x opt_main
        mkdir -p dependencies
        mv opt_main dependencies/

    - name: Download latest xlsynth release - codegen_main
      run: |
        RELEASE_URL=$(curl -s https://api.github.com/repos/xlsynth/xlsynth/releases/latest \
          | grep "browser_download_url.*codegen_main-ubuntu2204" \
          | cut -d '"' -f 4)
        curl -L -o codegen_main "$RELEASE_URL"
        chmod +x codegen_main
        mkdir -p dependencies
        mv codegen_main dependencies/

    - name: Download latest xlsynth release - dslx_fmt
      run: |
        RELEASE_URL=$(curl -s https://api.github.com/repos/xlsynth/xlsynth/releases/latest \
          | grep "browser_download_url.*dslx_fmt-ubuntu2204" \
          | cut -d '"' -f 4)
        curl -L -o dslx_fmt "$RELEASE_URL"
        chmod +x dslx_fmt
        mkdir -p dependencies
        mv dslx_fmt dependencies/

    - name: Download and unpack DSLX standard library
      run: |
        STD_LIB_URL=$(curl -s https://api.github.com/repos/xlsynth/xlsynth/releases/latest \
          | grep "browser_download_url.*dslx_stdlib.tar.gz" \
          | cut -d '"' -f 4)
        curl -L -o dslx_stdlib.tar.gz "$STD_LIB_URL"
        tar -xzf dslx_stdlib.tar.gz -C dependencies/

    - name: Run Bazel tests
      run: |
        XLSYNTH_TOOLS=$(pwd)/dependencies
        XLSYNTH_DRIVER_DIR=$(dirname "$(which xlsynth-driver)")
        export XLSYNTH_TOOLS
        bazel test \
            --action_env=XLSYNTH_TOOLS=$XLSYNTH_TOOLS \
            --action_env=XLSYNTH_DRIVER_DIR=$XLSYNTH_DRIVER_DIR \
            -c opt --test_output=errors \
            -- //...

    - name: Run Bazel tests (expecting DSLX path)
      run: |
        XLSYNTH_TOOLS=$(pwd)/dependencies
        XLSYNTH_DRIVER_DIR=$(dirname "$(which xlsynth-driver)")
        export XLSYNTH_TOOLS
        bazel test \
            --action_env=XLSYNTH_TOOLS=$XLSYNTH_TOOLS \
            --action_env=XLSYNTH_DRIVER_DIR=$XLSYNTH_DRIVER_DIR \
            --action_env=XLSYNTH_DSLX_PATH=sample_expecting_dslx_path \
            -c opt //sample_expecting_dslx_path:main_test \
            --test_output=errors
